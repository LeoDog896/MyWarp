/*
 * Copyright (C) 2011 - 2020, MyWarp team and contributors
 *
 * This file is part of MyWarp.
 *
 * MyWarp is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MyWarp is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with MyWarp. If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

repositories {
    //Bukkit API
    maven { url "https://hub.spigotmc.org/nexus/content/groups/public/" }
    //SquirrelID
    maven { url "http://maven.sk89q.com/repo/" }
    //SLF4Bukkit
    maven { url "https://raw.github.com/rjenkinsjr/maven2/repo" }
    //DynmapAPI
    maven { url "http://repo.mikeprimm.com" }
    //Permission Plugins
    maven { url "http://repository-thee140.forge.cloudbees.com/release/" }
    maven { url "http://nexus.hc.to/content/repositories/pub_releases/" }
    maven { url "http://repository-thee140.forge.cloudbees.com/snapshot/" }
    maven { url "http://repo.bstats.org/content/repositories/releases/" }
}

dependencies {
    compile project(":mywarp-core")
    compile "org.bukkit:bukkit:1.12.2-R0.1-SNAPSHOT"
    compile "com.sk89q:squirrelid:0.1.0"
    compile "net.milkbowl.vault:VaultAPI:1.4"
    compile "org.anjocaido:essentialsgroupmanager:2.10.1"
    compile "de.bananaco:bpermissions:2.10.5"
    compile "us.dynmap:DynmapCoreAPI:1.9.4"
    runtime "com.h2database:h2:1.3.176"
    runtime "info.ronjenkins:slf4bukkit:1.0.0"
    compile "org.bstats:bstats-bukkit:1.7"
}

processResources {
    filesMatching("**/plugin.yml") {
        expand(projectName: project.projectName,
                version: project.internalVersion,
                projectDescription: project.projectDescription,
                url: project.url
        )
    }
}

shadowJar {
    // exclude various text files from libraries
    exclude "**/META-INF/LICENSE*"
    exclude "**/META-INF/DEPENDENCIES*"
    exclude "**/META-INF/NOTICE*"
    exclude "**/META-INF/README.txt"

    dependencies {
        include(dependency(":mywarp-core"))
        include(dependency("org.jooq:jooq"))
        include(dependency("org.flywaydb:flyway-core"))
        include(dependency("org.slf4j:slf4j-api"))
        include(dependency("info.ronjenkins:slf4bukkit"))
        include(dependency("com.sk89q:squirrelid"))
        include(dependency("io.github.mywarp.intake:intake"))
        include(dependency("com.h2database:h2"))
        include(dependency("com.flowpowered:flow-math"))
        include(dependency("org.bstats:bstats-bukkit"))
    }
    relocate("org.jooq", "io.github.mywarp.mywarp.internal.jooq")
    relocate("org.flywaydb", "io.github.mywarp.mywarp.internal.flyway")
    relocate("org.h2", "io.github.mywarp.mywarp.internal.h2")
    relocate("com.flowpowered", "io.github.mywarp.mywarp.internal.flow-math")
    relocate("org.slf4j", "io.github.mywarp.mywarp.internal.slf4j")
    relocate("info.ronjenkins", "io.github.mywarp.mywarp.internal.slf4bukkit")
    relocate("com.sk89q.intake", "io.github.mywarp.mywarp.internal.intake")
    relocate("com.sk89q.squirrelid", "io.github.mywarp.mywarp.internal.squirrelid")
    relocate("org.bstats", "io.github.mywarp.mywarp.internal.bstats")
}
build.dependsOn(shadowJar)
